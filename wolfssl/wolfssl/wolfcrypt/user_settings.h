/* My user_settings.h
 * Based off the options.h generated by CMake
 */

#ifndef WOLFSSL_USER_SETTINGS_H
#define WOLFSSL_USER_SETTINGS_H

#ifdef __cplusplus
extern "C" {
#endif


#define HAVE_THREAD_LS
#define WC_16BIT_CPU
#define TFM_NO_ASM
#define WOLFSSL_NO_ASM
#define WC_NO_HARDEN
#define GCM_TABLE_4BIT
#define HAVE_AESGCM
#define WOLFSSL_USE_ALIGN
//#define HAVE_HKDF
#define HAVE_ECC
#define TFM_ECC256
#define ECC_SHAMIR
#define WC_RSA_PSS
#define WOLFSSL_PSS_LONG_SALT
#define WOLFSSL_NO_SHAKE256
#define WOLFSSL_NO_SHAKE128
//#define HAVE_POLY1305
//#define HAVE_ONE_TIME_AUTH
#define NO_CHACHA_ASM
#define WC_NO_HASHDRBG
#define HAVE_TLS_EXTENSIONS
#define HAVE_SUPPORTED_CURVES
//#define HAVE_FFDHE_2048
#define HAVE_EXTENDED_MASTER
#define HAVE_ENCRYPT_THEN_MAC
#define WC_NO_ASYNC_THREADING
#define HAVE_DH_DEFAULT_PARAMS
//#define WOLFSSL_SYS_CA_CERTS

#define HAVE_SNI
// #define HAVE_SECURE_RENEGOTIATION

// Had to disable a bunch of things to make internal.c small enough to fit segment (FATAL: Segment too large)

#define WOLFSSL_NO_CLIENT_AUTH

// Copied from M68K user_settings.h
#define NO_ASN_TIME
#define NO_PWDBASED
#define NO_RC4
#define NO_DSA
#define NO_DES3
#define NO_DH
#define NO_MD4
#define NO_WOLFSSL_SERVER

#define NO_MD5
//#define NO_RSA
#define NO_PSK
//#define NO_CERTS
//#define NO_SHA256
//#define NO_SHA
#define NO_OLD_TLS

// For TLS 1.3
#define HAVE_HKDF
#define WOLFSSL_AES_128
#define WOLFSSL_TLS13

/*
#define NO_ERROR_STRINGS
#define WC_NO_RSA_OAEP
#define NO_DEV_URANDOM
#define WOLFSSL_NO_SIGALG
*/

// End disable things

#define NO_FILESYSTEM
#define NO_WOLFSSL_DIR
#define NO_WRITEV
#define NO_WRITE_TEMP_FILES

#define SINGLE_THREADED

// This fixed an issue with sp_int.c
#define USE_FAST_MATH

#define WOLFSSL_HAVE_MIN
#define WOLFSSL_HAVE_MAX

//#define WC_NO_RNG
#define CUSTOM_RAND_GENERATE_BLOCK my_rng_gen_block
#define CUSTOM_RAND_TYPE      long
#define CUSTOM_RAND_GENERATE  my_rng_seed_gen

int my_rng_gen_block(unsigned char* output, unsigned int sz);
long my_rng_seed_gen(void);

#define WOLFSSL_NO_SOCK

#define WOLFSSL_SMALL_STACK

#define WOLFSSL_USER_IO

//#define WOLFSSL_16BIT_API __far __pascal __export
#define WOLFSSL_16BIT_API 

#define DEBUG_WOLFSSL


#ifdef __cplusplus
}
#endif


#endif /* WOLFSSL_USER_SETTINGS_H */
